Könntest du mir Schritt für Schritt alles erklären, was ich machen muss, wenn ich das Api key als Login Parameter verlangen will ?Also Ohne den Api soll nichts funktionieren und man muss sich mit dem Api key sozusagen einloggen sollen. Der APi Key soll folgendermaßen: überprüfft werden: Wenn der Schlüssel auf der folgenden Webseite Daten bekommt soll. Man sie verwenden können:
var dataFound = 0;
var dataPerPage = 10;
var favoriteMovies = [];
var currentPage = 1;
var totalResults = 0;
var searchResults = [];

// Laden der favorisierten Filme aus localStorage beim Seitenladen
$(document).ready(function() {
  loadFavorites();
});

// Funktion zum Anzeigen der Suchergebnisse basierend auf der aktuellen Seite
// Funktion zum Anzeigen der Suchergebnisse basierend auf der aktuellen Seite
function showResults() {
  var startIndex = (currentPage - 1) * dataPerPage;
  var endIndex = startIndex + dataPerPage;
  var resultsToDisplay = searchResults.slice(startIndex, endIndex);

  console.log("currentPage:", currentPage);
  console.log("totalResults:", totalResults);
  console.log("startIndex:", startIndex);
  console.log("endIndex:", endIndex);
  console.log("resultsToDisplay:", resultsToDisplay);

  console.log("Before split_jason call");
  split_jason(resultsToDisplay);
  console.log("After split_jason call");
}

// Funktion für die nächste Seite
async function nextPage() {
  
  if ((currentPage * dataPerPage) < totalResults) {
    currentPage++;
    console.log("Going to next page. New currentPage:", currentPage);
    await loadResultsPage(currentPage);
    showResults();
  }
}

// Funktion zum Laden der Suchergebnisse basierend auf der Seite
async function loadResultsPage(page) {
  var search = $("#search").val();
  if (search != null || search != "") {
    try {
      console.log("Loading results for page:", page);
      var response = await $.ajax({
        url: "http://www.omdbapi.com/?s=" + search + "&r=json&apikey=2279b9f1&page=" + page,
        dataType: 'json'
      });
      console.log("API response:", response);
      if (response.hasOwnProperty("Response") && response.Response == "True") {
        totalResults = parseInt(response.totalResults) || 0;
        searchResults = searchResults.concat(response.Search || []); // Änderung hier
      } else {
        console.error("Error in API response:", response.Error);
      }
    } catch (error) {
      console.error("Error making API request:", error);
    }
  }
}



function prevPage() {
  if (currentPage > 1) {
    currentPage--;
    console.log("Going to previous page. New currentPage:", currentPage);
    showResults();
  }
}


function get_movie_result() {
  currentPage = 1;
  var search = $("#search").val();
  if (search != null || search != "") {
    $.ajax({
      url: "http://www.omdbapi.com/?s=" + search + "&r=json&apikey=2279b9f1",
      dataType: 'json',
      success: function (data) {
        if (data.hasOwnProperty("Response") && data.Response == "True") {
          totalResults = parseInt(data.totalResults) || 0;
          searchResults = data.Search || [];
          
          
          // Abfrage ist auf jeden Fall erfolgreich, noch Garantie, dass Daten OK oder vorhanden sind
          // data.Search Array von Ergebnissen
          //split_jason(data.Search); wird benutzt aber anderst. siehe resultsToDisplay
          showResults();
        }
      },
      error: function (xmlHttpRequest, textStatus, errorThrown) {
        alert(textStatus, errorThrown);
      }
    });
  }
}

async function split_jason(myArray) {
  console.log("split_jason function called");
  console.log("myArray:", myArray);
  if (check_Array(myArray)) {
    $("#movieresult tbody").empty();
    for (var x = 0; x < myArray.length; x++) {
      var poster = "";
      var plot = "N/A"; // Standardwert
      var rating = "N/A"; // Standardwert für Bewertung
      var genre = "N/A"; // Standardwert für Genre
      var year = "N/A"; // Standardwert für Jahr

      if (myArray[x].hasOwnProperty("Poster") && myArray[x].Poster != "N/A") poster = "<img class='img-fluid' style='max-width: 100%; height: auto;' src='" + myArray[x].Poster + "'><br>";

      if (myArray[x].hasOwnProperty("imdbID")) {
        // Hier wird die Plot-Abfrage mit dem Standardwert "short" durchgeführt
        await getPlotData(myArray[x].imdbID).then((plotData) => {
          if (plotData.hasOwnProperty("Plot")) {
            plot = plotData.Plot;
          }
        }).catch((error) => {
          console.error("Error fetching plot data: ", error);
        });

        // Hier wird die Bewertungs-Abfrage durchgeführt
        await getRatingData(myArray[x].imdbID).then((ratingData) => {
          if (ratingData.hasOwnProperty("imdbRating")) {
            rating = ratingData.imdbRating;
          }
        }).catch((error) => {
          console.error("Error fetching rating data: ", error);
        });

        // Hier wird die Genre- und Jahr-Abfrage durchgeführt
        await getDetailData(myArray[x].imdbID).then((detailData) => {
          if (detailData.hasOwnProperty("Genre")) {
            genre = detailData.Genre;
          }
          if (detailData.hasOwnProperty("Year")) {
            year = detailData.Year;
          }
        }).catch((error) => {
          console.error("Error fetching detail data: ", error);
        });
      }

      // Hier wird die Bewertung in Sterne umgewandelt
      var starRating = convertToStars(rating);

      var newRowContent = "<tr><td>" + poster + "</td><td>" + starRating + "</td><td>" + plot + "</td><td>" + genre + "</td><td>" + year + "</td><td><i class='bi bi-heart-fill' onclick='addToFavorites(\"" + myArray[x].imdbID + "\")'></i> " + myArray[x].Title + "</td></tr>";

      $("#movieresult tbody").append(newRowContent);
    }
  } else {
    alert("Fehler bei der Verarbeitung !");
  }
}

function check_Array(myArray) {
  return Array.isArray(myArray);
}

function convertToStars(rating) {
  var roundedRating = Math.round(parseFloat(rating));
  var fullStars = Math.floor(roundedRating / 2);
  var halfStar = roundedRating % 2 === 1;
  var starRating = "";

  for (var i = 0; i < fullStars; i++) {
    starRating += "<i class='bi bi-star-fill'></i>"; // Bootstrap Icons für vollen Stern
  }

  if (halfStar) {
    starRating += "<i class='bi bi-star-half'></i>"; // Bootstrap Icons für halben Stern
  }

  return starRating;
}

function addToFavorites(imdbID) {
  if (favoriteMovies.indexOf(imdbID) === -1) {
    favoriteMovies.push(imdbID);
    saveFavorites(); // Speichern der favorisierten Filme nach dem Hinzufügen
    alert("Film zu Favoriten hinzugefügt!");
  } else {
    alert("Film ist bereits in den Favoriten!");
  }
}

// Funktion zum Speichern der favorisierten Filme in localStorage
function saveFavorites() {
  localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovies));
}

// Funktion zum Laden der favorisierten Filme aus localStorage
function loadFavorites() {
  var storedFavorites = localStorage.getItem('favoriteMovies');
  if (storedFavorites) {
    favoriteMovies = JSON.parse(storedFavorites);
  }
}

async function getPlotData(imdbID) {
  try {
    return await $.ajax({
      url: "http://www.omdbapi.com/?i=" + imdbID + "&plot=short&r=json&apikey=2279b9f1",
      dataType: 'json'
    });
  } catch (error) {
    console.error("Error fetching plot data: ", error);
    return {};
  }
}

async function getRatingData(imdbID) {
  try {
    return await $.ajax({
      url: "http://www.omdbapi.com/?i=" + imdbID + "&r=json&apikey=2279b9f1",
      dataType: 'json'
    });
  } catch (error) {
    console.error("Error fetching rating data: ", error);
    return {};
  }
}

async function getDetailData(imdbID) {
  try {
    return await $.ajax({
      url: "http://www.omdbapi.com/?i=" + imdbID + "&r=json&apikey=2279b9f1",
      dataType: 'json'
    });
  } catch (error) {
    console.error("Error fetching detail data: ", error);
    return {};
  }
}

function showFavorites() {
  $("#favoritesList").empty();

  // Funktion zum Laden der fehlenden Details für einen favorisierten Film
  async function loadDetails(imdbID) {
    try {
      // Hier wird die AJAX-Anfrage durchgeführt, um die fehlenden Details zu erhalten
      return await $.ajax({
        url: "http://www.omdbapi.com/?i=" + imdbID + "&plot=short&r=json&apikey=2279b9f1",
        dataType: 'json'
      });
    } catch (error) {
      console.error("Error fetching details for favorite movie: ", error);
      return {};
    }
  }

  // Funktion zum Hinzufügen eines favorisierten Films zur Liste
  async function addToFavoritesList(imdbID) {
    // Suchen Sie den Film mit imdbID im myArray
    var favoriteMovie = favoriteMovies.find(function(movie) {
      return movie === imdbID;
    });
  
    if (favoriteMovie) {
      // Hier wird die fehlenden Details für den favorisierten Film geladen
      var details = await loadDetails(imdbID);
  
      // Bewertung in Sterne umwandeln
      var starRating = convertToStars(details.imdbRating || 'N/A');
      var userStarRating = getUserStarRating(imdbID);

      var starRatingInput =
      "<div class='mb-3'>" +
        "<label for='userStarRating_" + imdbID + "' class='form-label'>Deine Bewertung:</label>" +
        "<select class='form-select' id='userStarRating_" + imdbID + "'>" +
          "<option value='1'>1 Stern</option>" +
          "<option value='2'>2 Sterne</option>" +
          "<option value='3'>3 Sterne</option>" +
          "<option value='4'>4 Sterne</option>" +
          "<option value='5'>5 Sterne</option>" +
          "<option value='6'>6 Sterne</option>" +
          "<option value='7'>7 Sterne</option>" +
          "<option value='8'>8 Sterne</option>" +
          "<option value='9'>9 Sterne</option>" +
          "<option value='10'>10 Sterne</option>" +
        "</select>" +
        "<button class='btn btn-primary mt-2' onclick='submitUserRating(\"" + imdbID + "\")'>Bewertung abschicken</button>" +
      "</div>";

      // Hier können Sie den gefundenen Film zu Ihrer Liste hinzufügen (#8c9287)
      var listItem =
      "<li class='mb-3 border rounded p-3' style='background-color: #B3B3B3;'>" +
        "<div class='row align-items-center'>" +
          "<div class='col-2 border-right text-center'><strong>Poster:</strong> <img src='" + (details.Poster || 'N/A') + "' alt='Poster' class='img-fluid'></div>" +
          "<div class='col-1 border-right text-center'><strong>Bewertung:</strong> <span class='text-warning font-weight-bold'>" + (details.imdbRating || 'N/A') + "</span> " + starRating + "</div>" +
          "<div class='col-1 border-right text-center'><strong>Deine Bewertung:</strong> " + userStarRating + "</div>" +
          "<div class='col-md-3 border-right'><strong>Plot:</strong> <textarea class='form-control' rows='5' readonly style='background-color: #fff; font-weight: bold;'>" + (details.Plot || 'N/A') + "</textarea></div>" +
          "<div class='col-2 border-right text-center'><strong>Genre:</strong> " + generateGenreBadges(details.Genre) + "</div>" +
          "<div class='col-2 border-right text-center'><strong>Year:</strong> " + generateYearBadges(details.Year) + "</div>" +
          "<div class='col-2 border-right'><strong>Titel:</strong> <span class='text-primary font-weight-bold'>" + (details.Title || 'N/A') + "</span></div>" +
          "<div class='col-1 text-center'><button class='btn btn-danger btn-sm mt-2' onclick='removeFromFavorites(\"" + imdbID + "\")'>Entfernen</button></div>" +
          "<div class='col-12'>" + starRatingInput + "</div>" +
        "</div>" +
      "</li>";
  
function generateGenreBadges(genre) {
  if (!genre) return 'N/A';

  var genreArray = genre.split(', ');
  var badges = genreArray.map(function (genreItem) {
    return "<span class='badge bg-primary mr-1'>" + genreItem + "</span>";
  });

  return badges.join('');
}

function generateYearBadges(year) {
  if (!year) return 'N/A';

  var yearArray = year.split(', ');
  var badges = yearArray.map(function (yearItem) {
    return "<span class='badge bg-secondary mr-1'>" + yearItem + "</span>";
  });

  return badges.join('');
}





    

      $("#favoritesList").append(listItem);
    }
  }

  // Durchgehen Sie die Liste der favorisierten Filme und fügen Sie sie zur Liste hinzu
  for (var i = 0; i < favoriteMovies.length; i++) {
    var imdbID = favoriteMovies[i];
    addToFavoritesList(imdbID);
  }
}

function removeFromFavorites(imdbID) {
  var index = favoriteMovies.indexOf(imdbID);
  if (index !== -1) {
    favoriteMovies.splice(index, 1);
    saveFavorites(); // Speichern der aktualisierten Liste
    showFavorites(); // Aktualisieren der Anzeige der favorisierten Filme
    alert("Film aus Favoriten entfernt!");
  } else {
    alert("Film nicht in den Favoriten gefunden!");
  }
}

function clearFavorites() {
  favoriteMovies = [];
  saveFavorites(); // Speichern der leeren Liste
  showFavorites(); // Aktualisieren der Anzeige der favorisierten Filme
  alert("Alle Filme aus Favoriten entfernt!");
}
function submitUserRating(imdbID) {
  var userStarRating = $("#userStarRating_" + imdbID).val();

  // Hier kannst du die Benutzerbewertung weiterverarbeiten, z.B. speichern oder anzeigen
  alert("Deine Bewertung für " + imdbID + ": " + userStarRating);

  // Speichere die Benutzerbewertung im localStorage
  saveUserRating(imdbID, userStarRating);

  // Schließe das Modal
  $("#myModal").modal("hide");
}

function saveUserRating(imdbID, rating) {
  // Speichere die Benutzerbewertung im localStorage
  localStorage.setItem('userStarRating_' + imdbID, rating);
}


function getUserStarRating(imdbID) {
  var rating = localStorage.getItem('userStarRating_' + imdbID);

  if (rating !== null) {
    // Wenn eine Bewertung vorhanden ist, wandele sie in Sternformat um
    return convertToStars(rating);
  } else {
    return 'N/A';
  }
}
function clearAllFavorites() {
  // Alle Filme aus den Favoriten entfernen
  favoriteMovies = [];
  saveFavorites(); // Speichern der leeren Liste
  showFavorites(); // Aktualisieren der Anzeige der favorisierten Filme
  alert("Alle Filme aus Favoriten entfernt!");
}

function resetAllRatings() {
  // Alle Benutzerbewertungen zurücksetzen
  for (var i = 0; i < favoriteMovies.length; i++) {
      var imdbID = favoriteMovies[i];
      localStorage.removeItem('userStarRating_' + imdbID);
  }
  showFavorites(); // Aktualisieren der Anzeige der favorisierten Filme
  alert("Alle Bewertungen zurückgesetzt!");
}
























































html:
so sieht mein html code aus:
<!DOCTYPE html>
<html lang="de">
<head>
    <title>Hello jQuery</title>

    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="icons/font/bootstrap-icons.css">

    <!-- Your custom CSS -->
    <link rel="stylesheet" href="css/custom.css">

    <!-- jQuery -->
    <script src="js/jquery-3.1.0.js"></script>

    <!-- Popper.js -->
    <script src="js/popper.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="js/bootstrap.min.js"></script>

    <!-- Your custom JavaScript -->
    <script src="js/script.js"></script>
</head>
<!-- #14181c-->
<body style="background-color: #333f49;">
    <img src="pic/Logo.PNG" alt="Bild" class="img-fluid rounded-circle" style="max-width: 10%; max-height: 10%;border-radius: 500px; border: 5px solid black ; position: relative; margin-left: 20px; margin-top: 20px; margin-bottom: -100px;">

    <div class="modal-dialog modal-lg " role="document" >
        <div class="modal-content" style="background-color: #333f49;"> <!-- Suchleiste-->
            <div class="modal-header"  >
                <input type="text" class="form-control " style="border-radius: 50px; " value="tarzan" id="search"> <!-- max-width: 90%;-->
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#favoritesModal" onclick="showFavorites()">
                    Favoriten anzeigen
                </button>

                <!-- Modal -->
                <div class="modal fade" id="favoritesModal" tabindex="-1" role="dialog" aria-labelledby="favoritesModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-xl" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="favoritesModalLabel">Favoriten</h5>
                                <div class="btn-group" role="group" aria-label="Options">
                                    <button type="button" class="btn btn-danger" onclick="clearAllFavorites()">Alle Filme entfernen</button>
                                    <button type="button" class="btn btn-warning" onclick="resetAllRatings()">Alle Bewertungen zurücksetzen</button>
                                </div>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <ul id="favoritesList">
                                    <!-- Hier werden die favorisierten Filme aufgelistet -->
                                    <!-- Die Informationen werden von der showFavorites-Funktion hinzugefügt -->
                                    <div class="modal-content" >
                                        <div class="modal-header">
                                            <h5 class="modal-title" >Ergebniss</h5>
                                        </div>
                                        <div class="modal-body">
                                            <table class="table" id="favoritesList">
                                                <thead >
                                                    <tr>
                                                        <td>Poster</td>
                                                        <td>Bewertung</td>
                                                        <td>plots</td>
                                                        <td>Genre</td>
                                                        <td>Year</td>
                                                        <td>Titel</td>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="modal-footer">
                                        </div>
                                    </div>
                                </ul>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Schließen</button>
                            </div>
                        </div>
                    </div>
                </div>

                <hr>
                <button onclick="get_movie_result()" class="btn btn-success">Suchen</button>
                
            </div>
        </div>
    </div>

    <div class="modal-dialog modal-lg" role="document" >
        <div class="modal-content" style="background-color: #2f495e;"> <!-- Ergenis first-->
            <div class="modal-header">
                <h5 class="modal-title" style="color: #39ff14; font-size: 26px;" >Ergebnis</h5><!-- #8c9287-->
                <div class="btn-group" role="group" aria-label="Options">
                    <button type="button" class="btn btn-danger" onclick="clearAllFavorites()">Alle Filme entfernen</button>
                    <button type="button" class="btn btn-warning" onclick="resetAllRatings()">Alle Bewertungen zurücksetzen</button>
                </div>
            </div>
            <div class="modal-body" >
                <table class="table" id="movieresult" style="background-color: #9babb9;"> <!-- Feld 1/ Feld keine Ahnung-->
                    <thead >
                        <tr>
                            <td>Poster</td>
                            <td>Bewertung</td>
                            <td>plot</td>
                            <td>Genre</td>
                            <td>Year</td>
                            <td>Titel</td>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" onclick="prevPage()">Vorherige Seite</button>
    <button class="btn btn-secondary" onclick="nextPage()">Nächste Seite</button>
            </div>
        </div>
    </div>
</div>

</body>
</html>
